from ultralytics import YOLO
from PIL import Image
import numpy as np
import streamlit as st
import time

# Configuration de page
st.set_page_config(page_title="D√©tection de voitures - YOLOv8n", layout="centered")

# Titre stylis√©
st.markdown("<h1 style='text-align: center; color: #4CAF50;'>üöó D√©tection de voitures avec YOLOv8n</h1>",
            unsafe_allow_html=True)
st.markdown(
    "<p style='text-align: center;'>T√©l√©versez une image pour d√©tecter les voitures pr√©sentes avec un mod√®le entra√Æn√©.</p>",
    unsafe_allow_html=True)

# Barre lat√©rale
with st.sidebar:
    st.markdown("### Param√®tres")
    st.info("Mod√®le utilis√© : `yolov8n.pt`", icon="üì¶")
    st.write("üí° Essayez avec une photo de stationnement ou de rue.")

# Chargement du mod√®le
with st.spinner("Chargement du mod√®le YOLOv8n..."):
    model = YOLO("yolov8n.pt")

# T√©l√©versement
uploaded_file = st.file_uploader("üîº T√©l√©versez une image (jpg, jpeg, png)", type=["jpg", "jpeg", "png"])

if uploaded_file:
    image = Image.open(uploaded_file)

    st.markdown("---")
    st.subheader("üñºÔ∏è Image t√©l√©vers√©e")
    st.image(image, use_container_width=True)

    # Traitement avec spinner
    with st.spinner("üîç D√©tection en cours..."):
        time.sleep(1)  # Simulation courte
        image_array = np.array(image)
        results = model(image_array)

    st.success("D√©tection termin√©e ‚úÖ")

    # Image annot√©e
    st.markdown("---")
    st.subheader("üìç R√©sultat avec d√©tection")
    annotated_image = results[0].plot()
    st.image(annotated_image, use_container_width=True)

    # R√©sultats bruts
    st.markdown("---")
    st.subheader("üìä R√©sultats bruts")
    boxes = results[0].boxes.data.cpu().numpy()

    if boxes.size > 0:
        st.dataframe(boxes, use_container_width=True)
    else:
        st.warning("Aucune voiture d√©tect√©e dans l'image.")
else:
    st.info("Veuillez t√©l√©verser une image pour commencer.")
